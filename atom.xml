<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>弥枳&#39;blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.coor.top/"/>
  <updated>2020-02-04T10:18:11.857Z</updated>
  <id>https://blog.coor.top/</id>
  
  <author>
    <name>弥枳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>命令行操作github语法</title>
    <link href="https://blog.coor.top/4121710/"/>
    <id>https://blog.coor.top/4121710/</id>
    <published>2020-01-30T02:59:33.000Z</published>
    <updated>2020-02-04T10:18:11.857Z</updated>
    
    <content type="html"><![CDATA[<p>GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。</p><a id="more"></a><h4 id="创建仓库并上传代码"><span class="heading-link">创建仓库并上传代码</span></h4><p>1.在github上创建仓库</p><p><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/10/1.png"></p><p>2.在本地要上传的项目目录使用命令行，建议安装<code>Node.js</code> + <code>Git Base</code>环境，然后使用<code>Git</code>命令行</p><p>3.为项目添加说明文件<br>命令：<code>echo &quot;这里填说明文件里要写的内容&quot; &gt;&gt; README.md</code></p><p>4.建立git仓库<br>命令：<code>git init</code></p><p>5.将项目的所有文件添加到仓库中<br>命令：<code>git add .</code></p><p>6.将说明文件添加到仓库中<br>命令：<code>git add README.md</code></p><p>7.提交到仓库<br>命令：<code>git commit -m &quot;提交记录注释语句&quot;</code></p><p>8.将本地的仓库关联到GitHub，后面的网址改成自己的<br>命令：<code>git remote add origin https://github.com/coortop/test.git</code></p><p>9.上传github之前pull一下，防止团队开发时覆盖别人已更新的代码<br>命令：<code>git pull origin master</code></p><p>10.上传代码到GitHub远程仓库<br>命令：<code>git push -u origin master</code></p><p>中间可能会让你输入Username和Password，你只要输入github的账号和密码就行了。执行完后，如果没有异常，等待执行完就上传成功了。</p><h4 id="更新代码到github"><span class="heading-link">更新代码到github</span></h4><p>1.查看当前的git仓库状态<br>命令：<code>git status</code></p><p>2.更新全部，可自定义要更新要更新的目录<br>命令：<code>git add *</code></p><p>3.添加更新说明<br>命令：<code>git commit -m &quot;更新说明&quot;</code></p><p>4.拉取当前分支最新代码<br>命令：<code>git pull</code></p><p>5.push到远程master分支上<br>命令：<code>git push origin master</code></p><p>不出意外，打开GitHub已经同步了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名GitHub。&lt;/p&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://blog.coor.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="https://blog.coor.top/tags/git/"/>
    
      <category term="命令" scheme="https://blog.coor.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="https://blog.coor.top/461329/"/>
    <id>https://blog.coor.top/461329/</id>
    <published>2020-01-29T10:54:12.000Z</published>
    <updated>2020-02-04T10:18:05.742Z</updated>
    
    <content type="html"><![CDATA[<p>单例模式（Singleton Pattern）是 Java 中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。</p><a id="more"></a><p>优点：<br>1.在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例（比如管理学院首页页面缓存）。<br>2.避免对资源的多重占用（比如写文件操作）。</p><p>缺点：<br>没有接口，不能继承，与单一职责原则冲突，一个类应该只关心内部逻辑，而不关心外面怎么样来实例化。</p><p>单例模式有多种实现方式，这里介绍常用的两种。</p><h4 id="懒汉式"><span class="heading-link">懒汉式</span></h4><p>在方法调用时才实例化对象</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingleObject singleObject;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingleObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleObject <span class="title">getSingleObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (singleObject == <span class="keyword">null</span>) &#123;</span><br><span class="line">            singleObject = <span class="keyword">new</span> SingleObject();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> singleObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SingleObject singleObject1 = SingleObject.getSingleObject();</span><br><span class="line">        SingleObject singleObject2 = SingleObject.getSingleObject();</span><br><span class="line"></span><br><span class="line">        System.out.println(singleObject1 == singleObject2);<span class="comment">//输出true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><h4 id="饿汉式"><span class="heading-link">饿汉式</span></h4><p>在类加载时就实例化对象</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingleObject singleObject = <span class="keyword">new</span> SingleObject();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingleObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleObject <span class="title">getSingleObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> singleObject;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SingleObject singleObject1 = SingleObject.getSingleObject();</span><br><span class="line">        SingleObject singleObject2 = SingleObject.getSingleObject();</span><br><span class="line"></span><br><span class="line">        System.out.println(singleObject1 == singleObject2);<span class="comment">//输出true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单例模式（Singleton Pattern）是 Java 中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。&lt;/p&gt;
    
    </summary>
    
    
      <category term="设计模式" scheme="https://blog.coor.top/categories/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="设计模式" scheme="https://blog.coor.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>谈谈评论系统</title>
    <link href="https://blog.coor.top/546598/"/>
    <id>https://blog.coor.top/546598/</id>
    <published>2020-01-24T04:04:35.000Z</published>
    <updated>2020-02-04T10:17:59.780Z</updated>
    
    <content type="html"><![CDATA[<p>网站评论系统用来增加网站用户之间的互动，如果没有互动，那也太枯燥无味了吧。</p><p>目前流行的第三方评论系统有的已经关了，像网易云跟帖，有的被墙，比如Disqus <s>有不用翻墙就能请求的api请留言告诉我~~</s></p><p>剩下能用的有gitalk，gitment，livere，valine，utterances等等</p><a id="more"></a><p>我先说说我试过的吧！</p><h4 id="gitalk"><span class="heading-link">gitalk</span></h4><p>刚开始第一个用的是github的gitalk，gitalk 是一个基于 Github Issue 和 Preact 开发的评论插件。</p><p>它的最大优点就是方便，简单，很适合新手。为什么我放弃他了呢？<br>因为界面不够炫酷，还要github账号登录 <s>这使得大多数非专业it行业路人可能放弃评论</s></p><h4 id="livere"><span class="heading-link">livere</span></h4><p>livere，来必力，一款出自韩国的第三方评论系统，功能强大，系统稳定，支持多个第三方登录方式，比如QQ、微信、百度…</p><p>放弃的原因。界面丑~ <s>颜控党，丑拒</s><br>还有就是，由于服务器不在国内，加载慢</p><h4 id="valine"><span class="heading-link">valine</span></h4><p>界面清爽，国产，加载速度快，不需要账号登录，就是我用的这个</p><p>为什么样子和你用的不一样？<br>因为我自己改了样式主题，但是功能是一样的,想要改的话，修改css样式就行了，自己不会改的话就百度，方法一大堆</p><p>我现在说说valine评论系统中遇到的坑<br>1.为什么评论提交的时候验证关不掉？<br>就是让计算数学题那个，为什么要关掉？<s>太难不会算</s> 为了让操作变得最简单，为用户着想<br>valine属性设置这里<br>notify - 评论之后邮箱通知给站长<br>verify - 提交验证<br>如果notify是true的话，无论verify是true还是false都会强制开启验证，为了防止垃圾评论一直给站长邮箱发通知<br>要想关闭评论验证就得把notify和verify都设置才false</p><p>2.要想用邮箱通知有不想有评论验证怎么办？<br>当然有办法，<a href="https://github.com/DesertsP/Valine-Admin" target="_blank" rel="noopener" title="点击打开">Valine-Admin</a>，Valine 评论系统的扩展和增强，主要实现评论邮件通知、评论管理、垃圾评论过滤等功能。支持完全自定义的邮件通知模板。基于Akismet API实现准确的垃圾评论过滤。此外，使用云函数等技术解决了免费版云引擎休眠问题，支持云引擎自动唤醒，漏发邮件自动补发。兼容云淡风轻及Deserts维护的多版本Valine。</p><p>3.最重要的是我自己在使用valine的时候出现了一个bug<br>当开启全站pjax的时候，遇到切换页面不把评论刷新成当前访问页面的评论内容<br>bug原因：<br><a href="https://valine.js.org/configuration.html#path" target="_blank" rel="noopener">valine.js.org</a>，这是valine的官方文档，点击查看配置项path属性<br>关于path属性，作用是用于区分不同的文章页，以保证正确读取该文章页下的评论列表。<br>官方文档上写的是非必要配置项，默认值为<code>window.location.pathname</code>,但是经过自己的实验，他这个默认值没起作用<br>解决办法：<br>手动添加<code>path: window.location.pathname</code>配置</p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Valine(&#123;</span><br><span class="line">      el: <span class="string">'#valine-container'</span>,</span><br><span class="line">      appId: <span class="string">'你的id'</span>,</span><br><span class="line">      appKey: <span class="string">'你的key'</span>,</span><br><span class="line">      ......</span><br><span class="line">      lang: <span class="string">'zh-cn'</span>,</span><br><span class="line">      path: <span class="built_in">window</span>.location.pathname</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></div></figure><p>目前就体验过这三款，感觉valine挺不错的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网站评论系统用来增加网站用户之间的互动，如果没有互动，那也太枯燥无味了吧。&lt;/p&gt;&lt;p&gt;目前流行的第三方评论系统有的已经关了，像网易云跟帖，有的被墙，比如Disqus &lt;s&gt;有不用翻墙就能请求的api请留言告诉我~~&lt;/s&gt;&lt;/p&gt;&lt;p&gt;剩下能用的有gitalk，gitment，livere，valine，utterances等等&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲聊" scheme="https://blog.coor.top/categories/%E9%97%B2%E8%81%8A/"/>
    
    
      <category term="评论" scheme="https://blog.coor.top/tags/%E8%AF%84%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>常用linux命令介绍</title>
    <link href="https://blog.coor.top/632027/"/>
    <id>https://blog.coor.top/632027/</id>
    <published>2020-01-20T07:50:50.000Z</published>
    <updated>2020-02-04T10:17:52.180Z</updated>
    
    <content type="html"><![CDATA[<p>linux命令是对Linux系统进行管理的命令。对于Linux系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件，Linux系统管理的命令是它正常运行的核心。</p><a id="more"></a><div class="note-plugin warning"><p>注意：语法中所有 [ ] 代表可选参数</p></div><h3 id="pwd"><span class="heading-link">pwd</span></h3><p>pwd命令用于显示工作目录。<br>执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称。</p><h4 id="语法"><span class="heading-link">语法</span></h4><blockquote><p>pwd [–help][–version]</p></blockquote><h3 id="cd"><span class="heading-link">cd</span></h3><p>cd命令用于切换当前工作目录至 dirName(目录参数)。<br>其中 dirName 表示法可为绝对路径或相对路径。若目录名称省略，则变换至使用者的 home 目录 (也就是刚 login 时所在的目录)。<br>另外，&quot;~&quot; 也表示为 home 目录 的意思，&quot;.&quot; 则是表示目前所在的目录，&quot;…&quot; 则表示目前目录位置的上一层目录。</p><h4 id="语法-2"><span class="heading-link">语法</span></h4><blockquote><p>cd [dirName]</p></blockquote><h3 id="mkdir"><span class="heading-link">mkdir</span></h3><p>mkdir命令用于建立名称为 dirName 之子目录。</p><h4 id="语法-3"><span class="heading-link">语法</span></h4><blockquote><p>mkdir [-p] dirName</p></blockquote><ul><li>-p 确保目录名称存在，不存在的就建一个。</li></ul><h3 id="ls"><span class="heading-link">ls</span></h3><p>ls命令用于显示指定工作目录下之内容（列出目前工作目录所含之文件及子目录)。</p><h4 id="语法-4"><span class="heading-link">语法</span></h4><blockquote><p>ls [-alrtAFR] [name…]</p></blockquote><h5 id="参数"><span class="heading-link">参数</span></h5><ul><li>-a 显示所有文件及目录 (ls内定将文件名或目录名称开头为&quot;.&quot;的视为隐藏档，不会列出)</li><li>-l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</li><li>-r 将文件以相反次序显示(原定依英文字母次序)</li><li>-t 将文件依建立时间之先后次序列出</li><li>-A 同 -a ，但不列出 “.” (目前目录) 及 “…” (父目录)</li><li>-F 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “/”</li><li>-R 若目录下有文件，则以下之文件亦皆依序列出</li></ul><h3 id="vivim"><span class="heading-link">vi/vim</span></h3><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。<br>但是目前我们使用比较多的是 vim 编辑器。<br>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p><h4 id="语法-5"><span class="heading-link">语法</span></h4><blockquote><p>vi demo.txt<br>vim demo.txt</p></blockquote><p>如果文件不存在，会自动创建文件<br>进入编辑器后为非编辑状态，点击“i”或“insert”进入编辑状态<br>编辑完成后点击“esc”退出编辑状态，输入<br>:wq -&gt; 保存并退出<br>:q -&gt; 不保存退出<br>:q! -&gt; 强制退出</p><h3 id="touch"><span class="heading-link">touch</span></h3><p>touch命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。<br>ls -l 可以显示档案的时间记录。</p><h4 id="语法-6"><span class="heading-link">语法</span></h4><blockquote><p>touch [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][–help][–version][文件或目录…]</p></blockquote><h5 id="参数-2"><span class="heading-link">参数</span></h5><ul><li>a 改变档案的读取时间记录。</li><li>m 改变档案的修改时间记录。</li><li>c 假如目的档案不存在，不会建立新的档案。与 --no-create 的效果一样。</li><li>f 不使用，是为了与其他 unix 系统的相容性而保留。</li><li>r 使用参考档的时间记录，与 --file 的效果一样。</li><li>d 设定时间与日期，可以使用各种不同的格式。</li><li>t 设定档案的时间记录，格式与 date 指令相同。</li><li>–no-create 不会建立新档案。</li><li>–help 列出指令格式。</li><li>–version 列出版本讯息。</li></ul><h3 id="cat"><span class="heading-link">cat</span></h3><p>cat 命令用于连接文件并打印到标准输出设备上。</p><h4 id="语法-7"><span class="heading-link">语法</span></h4><blockquote><p>cat [-AbeEnstTuv] [–help] [–version] fileName</p></blockquote><h5 id="参数-3"><span class="heading-link">参数</span></h5><ul><li>-n 或 --number：由 1 开始对所有输出的行数编号。</li><li>-b 或 --number-nonblank：和 -n 相似，只不过对于空白行不编号。</li><li>-s 或 --squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。</li><li>-v 或 --show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。</li><li>-E 或 --show-ends : 在每行结束处显示 $。</li><li>-T 或 --show-tabs: 将 TAB 字符显示为 ^I。</li><li>-A, --show-all：等价于 -vET。</li><li>-e：等价于&quot;-vE&quot;选项；</li><li>-t：等价于&quot;-vT&quot;选项；</li></ul><h3 id="head"><span class="heading-link">head</span></h3><p>head命令用于查看文档的开始指定数量的字符块，默认显示文档的前 10 行，如果给定的文件不止一个，则在显示的每个文件前面加一个文件名标题。</p><h4 id="语法-8"><span class="heading-link">语法</span></h4><blockquote><p>head [选项] [文件…]</p></blockquote><h5 id="参数-4"><span class="heading-link">参数</span></h5><ul><li>-c, --bytes=[-]K 　　k,显示文档开始的前k个字节，-k,不显示文档结尾的最后 k 个字节</li><li>-n, --lines=[-]K 　　 k,显示文档开始的前k行，-k,不显示文档结尾的最后 k 行</li><li>-q, --quiet, --silent 不显示包含给定文件名的文件头</li><li>-v, --verbose 　　 总是显示包含给定文件名的文件头</li><li>–help 　　　　　 显示此帮助信息并退出</li><li>–version 　　 　　显示版本信息并退出</li></ul><h3 id="tailf"><span class="heading-link">tailf</span></h3><p>tail 命令可用于查看文件的内容，有一个常用的参数 -f 常用于查阅正在改变的日志文件。<br>tail -f filename 会把 filename 文件里的最尾部的内容显示在屏幕上，并且不断刷新，只要 filename 更新就可以看到最新的文件内容。</p><h4 id="语法-9"><span class="heading-link">语法</span></h4><blockquote><p>tail [参数] [文件]</p></blockquote><h5 id="参数-5"><span class="heading-link">参数</span></h5><ul><li>-f 循环读取</li><li>-q 不显示处理信息</li><li>-v 显示详细的处理信息</li><li>-c&lt;数目&gt; 显示的字节数</li><li>-n&lt;行数&gt; 显示文件的尾部 n 行内容</li><li>–pid=PID 与-f合用,表示在进程ID,PID死掉之后结束</li><li>-q, --quiet, --silent 从不输出给出文件名的首部</li><li>-s, --sleep-interval=S 与-f合用,表示在每次反复的间隔休眠S秒</li></ul><h3 id="ifconfig"><span class="heading-link">ifconfig</span></h3><p>ifconfig命令用于显示或设置网络设备。<br>ifconfig可设置网络设备的状态，或是显示目前的设置。</p><h4 id="语法-10"><span class="heading-link">语法</span></h4><blockquote><p>ifconfig [网络设备][down up -allmulti -arp -promisc][add&lt;地址&gt;][del&lt;地址&gt;][&lt;hw&lt;网络设备类型&gt;&lt;硬件地址&gt;][io_addr&lt;I/O地址&gt;][irq&lt;IRQ地址&gt;][media&lt;网络媒介类型&gt;][mem_start&lt;内存地址&gt;][metric&lt;数目&gt;][mtu&lt;字节&gt;][netmask&lt;子网掩码&gt;][tunnel&lt;地址&gt;][-broadcast&lt;地址&gt;][-pointopoint&lt;地址&gt;][IP地址]</p></blockquote><h5 id="参数-6"><span class="heading-link">参数</span></h5><ul><li>add&lt;地址&gt; 设置网络设备IPv6的IP地址。</li><li>del&lt;地址&gt; 删除网络设备IPv6的IP地址。</li><li>down 关闭指定的网络设备。</li><li>&lt;hw&lt;网络设备类型&gt;&lt;硬件地址&gt; 设置网络设备的类型与硬件地址。</li><li>io_addr&lt;I/O地址&gt; 设置网络设备的I/O地址。</li><li>irq&lt;IRQ地址&gt; 设置网络设备的IRQ。</li><li>media&lt;网络媒介类型&gt; 设置网络设备的媒介类型。</li><li>mem_start&lt;内存地址&gt; 设置网络设备在主内存所占用的起始地址。</li><li>metric&lt;数目&gt; 指定在计算数据包的转送次数时，所要加上的数目。</li><li>mtu&lt;字节&gt; 设置网络设备的MTU。</li><li>netmask&lt;子网掩码&gt; 设置网络设备的子网掩码。</li><li>tunnel&lt;地址&gt; 建立IPv4与IPv6之间的隧道通信地址。</li><li>up 启动指定的网络设备。</li><li>-broadcast&lt;地址&gt; 将要送往指定地址的数据包当成广播数据包来处理。</li><li>-pointopoint&lt;地址&gt; 与指定地址的网络设备建立直接连线，此模式具有保密功能。</li><li>-promisc 关闭或启动指定网络设备的promiscuous模式。</li><li>[IP地址] 指定网络设备的IP地址。</li><li>[网络设备] 指定网络设备的名称。</li></ul><h3 id="reboot"><span class="heading-link">reboot</span></h3><p>reboot命令用于用来重新启动计算机。<br>若系统的 runlevel 为 0 或 6 ，则重新开机，否则以 shutdown 指令（加上 -r 参数）来取代</p><h4 id="语法-11"><span class="heading-link">语法</span></h4><blockquote><p>reboot [-n] [-w] [-d] [-f] [-i]</p></blockquote><h5 id="参数-7"><span class="heading-link">参数</span></h5><ul><li>-n : 在重开机前不做将记忆体资料写回硬盘的动作</li><li>-w : 并不会真的重开机，只是把记录写到 /var/log/wtmp 档案里</li><li>-d : 不把记录写到 /var/log/wtmp 档案里（-n 这个参数包含了 -d）</li><li>-f : 强迫重开机，不呼叫 shutdown 这个指令</li><li>-i : 在重开机之前先把所有网络相关的装置先停止</li></ul><h3 id="tar"><span class="heading-link">tar</span></h3><p>tar命令用于备份文件。<br>tar是用来建立，还原备份文件的工具程序，它可以加入，解开备份文件内的文件。</p><h4 id="语法-12"><span class="heading-link">语法</span></h4><p>压缩文件 非打包</p><blockquote><p>touch a.c</p></blockquote><p>列出压缩文件内容</p><blockquote><p>tar -tzvf test.tar.gz</p></blockquote><p>解压文件</p><blockquote><p>tar -xzvf test.tar.gz</p></blockquote><h3 id="cp"><span class="heading-link">cp</span></h3><p>cp命令主要用于复制文件或目录。</p><h4 id="语法-13"><span class="heading-link">语法</span></h4><blockquote><p>cp [options] source dest</p></blockquote><p>或</p><blockquote><p>cp [options] source… directory</p></blockquote><h5 id="参数-8"><span class="heading-link">参数</span></h5><ul><li>-a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。</li><li>-d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。</li><li>-f：覆盖已经存在的目标文件而不给出提示。</li><li>-i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答&quot;y&quot;时目标文件将被覆盖。</li><li>-p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。</li><li>-r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</li><li>-l：不复制文件，只是生成链接文件。</li></ul><h3 id="ctrl-c"><span class="heading-link">ctrl + c</span></h3><p>中断当前操作</p><h3 id="mv"><span class="heading-link">mv</span></h3><p>mv 命令用来为文件或目录改名、或将文件或目录移入其它位置，也就是windows上的剪切操作。</p><h4 id="语法-14"><span class="heading-link">语法</span></h4><blockquote><p>mv [options] source dest</p></blockquote><p>或</p><blockquote><p>mv [options] source… directory</p></blockquote><h5 id="参数-9"><span class="heading-link">参数</span></h5><ul><li>-i: 若指定目录已有同名文件，则先询问是否覆盖旧文件;</li><li>-f: 在 mv 操作要覆盖某已有的目标文件时不给任何指示;</li></ul><h3 id="rm"><span class="heading-link">rm</span></h3><p>rm命令用于删除一个文件或者目录。</p><h4 id="语法-15"><span class="heading-link">语法</span></h4><blockquote><p>rm [options] name…</p></blockquote><h5 id="参数-10"><span class="heading-link">参数</span></h5><ul><li>-i 删除前逐一询问确认。</li><li>-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。</li><li>-r 将目录及以下之档案亦逐一删除。</li></ul><h3 id="clear"><span class="heading-link">clear</span></h3><p>清空命令行</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux命令是对Linux系统进行管理的命令。对于Linux系统来说，无论是中央处理器、内存、磁盘驱动器、键盘、鼠标，还是用户等都是文件，Linux系统管理的命令是它正常运行的核心。&lt;/p&gt;
    
    </summary>
    
    
      <category term="linux" scheme="https://blog.coor.top/categories/linux/"/>
    
    
      <category term="命令" scheme="https://blog.coor.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="系统" scheme="https://blog.coor.top/tags/%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="服务器" scheme="https://blog.coor.top/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>springboot</title>
    <link href="https://blog.coor.top/107116/"/>
    <id>https://blog.coor.top/107116/</id>
    <published>2019-12-06T02:24:02.000Z</published>
    <updated>2020-02-04T10:17:45.464Z</updated>
    
    <content type="html"><![CDATA[<p>在使用传统的Spring去做Java EE（Java Enterprise Edition）开发中，大量的 XML 文件存在于项目之中，导致JavaEE项目变得慢慢笨重起来，繁琐的配置和整合第三方框架的配置，导致了开发和部署效率的降低。Spring Boot 并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。同时它集成了大量常用的第三方库配置，Spring Boot应用中这些第三方库几乎可以是零配置的开箱即用（out-of-the-box），大部分的 Spring Boot 应用都只需要非常少量的配置代码（基于 Java 的配置），开发者能够更加专注于业务逻辑。</p><a id="more"></a><p><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/0.png"></p><h3 id="springboot简介"><span class="heading-link">springboot简介</span></h3><p>SpringBoot是由Pivotal团队在2013年开始研发、2014年4月发布第一个版本的全新开源的轻量级框架。它基于Spring4.0设计，不仅继承了Spring框架原有的优秀特性，而且还通过简化配置来进一步简化了Spring应用的整个搭建和开发过程。另外SpringBoot通过集成大量的框架使得依赖包的版本冲突，以及引用的不稳定性等问题得到了很好的解决。</p><h3 id="springboot的特点"><span class="heading-link">springboot的特点</span></h3><p>1、可以创建独立的Spring应用程序，并且基于其Maven或Gradle插件，可以创建可执行的JARs和WARs<br>2、内嵌Tomcat或Jetty等Servlet容器<br>3、提供自动配置的“starter”项目对象模型（POMS）以简化Maven配置<br>4、尽可能自动配置Spring容器<br>5、提供准备好的特性，如指标、健康检查和外部化配置<br>6、绝对没有代码生成，不需要XML配置</p><h3 id="安装和使用步骤"><span class="heading-link">安装和使用步骤</span></h3><p>回顾我们之前的 SSM 项目，搭建过程还是比较繁琐的，需要：</p><ol><li>配置web.xml，加载spring和spring mvc</li><li>配置数据库连接、配置spring事务</li><li>配置加载配置文件的读取，开启注解</li><li>…</li><li>配置完成之后部署tomcat 调试</li></ol><p>而使用SpringBoot来开发项目则只需要非常少的几个配置就可以搭建起来一个 Web 项目，这里我使用idea可以自动创建</p><h4 id="使用idea搭建项目"><span class="heading-link">使用idea搭建项目</span></h4><ol><li>创建Spring Initializr项目<br><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/1.png"></li><li>填写maven项目基本信息<br><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/2.png"></li><li>选择开发需要的组件，这里我们java web开发按照图示选择<br><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/3.png"></li><li>填写项目名字和项目目录<br><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/4.png"></li><li>这里是项目基本结构<br><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/6/5.png"></li></ol><h4 id="几项主要的项目结构介绍"><span class="heading-link">几项主要的项目结构介绍</span></h4><ol><li>src/main/java/com…/DemoApplication(项目名+Application): 一个带有 main() 方法的类，用于启动应用程序，也就是springboot的特点，自带的tomcat，可不用配置tomcat直接运行</li><li>resources/application.properties: 一个空的 properties 文件，用于配置整个springboot项目</li><li>pom.xml: maven 构建说明文件</li></ol><h3 id="总结"><span class="heading-link">总结</span></h3><p>springboot项目实际作用就是简化了以前整合是spring+springmvc+mybatis等项目的创建过程，其他开发步骤和以前一样，是目前开发首选的方式之一。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在使用传统的Spring去做Java EE（Java Enterprise Edition）开发中，大量的 XML 文件存在于项目之中，导致JavaEE项目变得慢慢笨重起来，繁琐的配置和整合第三方框架的配置，导致了开发和部署效率的降低。Spring Boot 并不是用来替代 Spring 的解决方案，而是和 Spring 框架紧密结合用于提升 Spring 开发者体验的工具。同时它集成了大量常用的第三方库配置，Spring Boot应用中这些第三方库几乎可以是零配置的开箱即用（out-of-the-box），大部分的 Spring Boot 应用都只需要非常少量的配置代码（基于 Java 的配置），开发者能够更加专注于业务逻辑。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://blog.coor.top/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="框架" scheme="https://blog.coor.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>io流</title>
    <link href="https://blog.coor.top/66783/"/>
    <id>https://blog.coor.top/66783/</id>
    <published>2019-10-30T05:51:10.000Z</published>
    <updated>2020-02-04T10:17:25.465Z</updated>
    
    <content type="html"><![CDATA[<p>Java对数据的操作是通过流的方式，IO流用来处理设备之间的数据传输，上传文件和下载文件，Java用于操作流的对象都在IO包中。</p><a id="more"></a><p><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/3/0.jpg"></p><h3 id="file对象"><span class="heading-link">File对象</span></h3><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(String pathname);</span><br><span class="line"><span class="comment">//文件内容字节长度</span></span><br><span class="line">file.length();</span><br><span class="line"><span class="comment">//判断file对象是否为文件</span></span><br><span class="line">file.isFile();</span><br><span class="line"><span class="comment">//判断file对象是否为文件夹</span></span><br><span class="line">file.isDirectory();</span><br><span class="line"><span class="comment">//判断file对象是否存在</span></span><br><span class="line">file.exists();</span><br><span class="line"><span class="comment">//获取file对象的名字</span></span><br><span class="line">file.getName();</span><br><span class="line"><span class="comment">//获取file对象下的子文件夹（获取内容为数组）</span></span><br><span class="line">file.listFiles();</span><br><span class="line"><span class="comment">//获取file对象的绝对路径</span></span><br><span class="line">file.getAbsolutePath();</span><br><span class="line">......</span><br></pre></td></tr></table></div></figure><!-- more --><h4 id="创建方法"><span class="heading-link">创建方法</span></h4><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file.createNewFile();</span><br><span class="line"><span class="comment">//指定位置创建一个空文件，成功就返回true，如果已存在就不创建，然后返回false。</span></span><br><span class="line"></span><br><span class="line">file.mkdir();</span><br><span class="line"><span class="comment">//在指定位置创建一个单级文件夹。</span></span><br><span class="line"></span><br><span class="line">file.mkdirs();</span><br><span class="line"><span class="comment">//在指定位置创建一个多级文件夹。</span></span><br><span class="line"></span><br><span class="line">file.renameTo(File dest);</span><br><span class="line"><span class="comment">//如果目标文件与源文件是在同一个路径下，那么renameTo的作用是重命名，</span></span><br><span class="line"><span class="comment">//如果目标文件与源文件不是在同一个路径下，那么renameTo的作用就是剪切，而且还不能操作文件夹。</span></span><br></pre></td></tr></table></div></figure><h4 id="删除方法"><span class="heading-link">删除方法</span></h4><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file.delete() 删除文件或者一个空文件夹，不能删除非空文件夹，马上删除文件，返回一个布尔值。</span><br><span class="line">file.deleteOnExit()jvm退出时删除文件或者文件夹，用于删除临时文件，无返回值。</span><br></pre></td></tr></table></div></figure><h4 id="判断方法"><span class="heading-link">判断方法</span></h4><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">file.exists();</span><br><span class="line"><span class="comment">//文件或文件夹是否存在。</span></span><br><span class="line">file.isFile();</span><br><span class="line"><span class="comment">//是否是一个文件，如果不存在，则始终为false。</span></span><br><span class="line">file.isDirectory();</span><br><span class="line"><span class="comment">//是否是一个目录，如果不存在，则始终为false。</span></span><br><span class="line">file.isHidden() ;</span><br><span class="line"><span class="comment">//是否是一个隐藏的文件或是否是隐藏的目录。</span></span><br><span class="line">file.isAbsolute();</span><br><span class="line"><span class="comment">//测试此抽象路径名是否为绝对路径名。</span></span><br></pre></td></tr></table></div></figure><h4 id="获取方法"><span class="heading-link">获取方法</span></h4><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">file.getName();</span><br><span class="line"><span class="comment">//获取文件或文件夹的名称，不包含上级路径。</span></span><br><span class="line">file.getAbsolutePath();</span><br><span class="line"><span class="comment">//获取文件的绝对路径，与文件是否存在没关系</span></span><br><span class="line">file.length();</span><br><span class="line"><span class="comment">//获取文件的大小（字节数），如果文件不存在则返回0L，如果是文件夹也返回0L。</span></span><br><span class="line"></span><br><span class="line">file.getParent();</span><br><span class="line"><span class="comment">//返回此抽象路径名父目录的路径名字符串；如果此路径名没有指定父目录，则返回null。</span></span><br><span class="line">file.lastModified();</span><br><span class="line"><span class="comment">//获取最后一次被修改的时间。</span></span><br></pre></td></tr></table></div></figure><h3 id="字节流"><span class="heading-link">字节流</span></h3><p>字节流主要操作byte类型数据，以byte数组为准，主要操作类是InputStream类和OutputStream类。</p><p>1、字节流基础类</p><p>1）字节输出流：OutputStreame<br>OutputStream是整个IO包中字节输出流最大的父类，此类的定义如下：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//public abstract class OutputStream implements Closeable, Flushable &#123;&#125;</span></span><br></pre></td></tr></table></div></figure><p>从这个定义中可以发现，OutputStream类是一个抽象类，它的常用方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将 b.length 个字节从指定的 byte 数组写入此输出流</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 将指定的字节写入此输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 关闭此输出流并释放与此流有关的所有系统资源</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">// 刷新此输出流并强制写出所有缓冲的输出字节</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span></span><br></pre></td></tr></table></div></figure><p>InputStream是整个IO包中字节输入流最大的父类，此类的定义如下：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//public abstract class InputStream extends Object implements Closeable &#123;&#125;</span></span><br></pre></td></tr></table></div></figure><p>从这个定义中可以发现，InputStream类也是一个抽象类，它的常用方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">availabel</span><span class="params">()</span> <span class="keyword">throws</span> IOException <span class="comment">//可以取得输入文件的大小</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException <span class="comment">//关闭输入流</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException <span class="comment">//读取内容，以数字方式读取</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">(<span class="keyword">byte</span>[] b)</span> <span class="keyword">throws</span> IOException <span class="comment">//将内容读到byte数组中同时返回读入的个数</span></span></span><br></pre></td></tr></table></div></figure><p>2、字节文件操作流</p><p>FileInputStream：字节文件输入流，从文件系统中的某个文件中获得输入字节，用于读取诸如图像数据之类的原始字节流。</p><p>构造方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过打开一个到实际文件的连接来创建一个FileInputStream，该文件通过文件系统中的File对象file指定</span></span><br><span class="line">FileInputStream(File file)</span><br><span class="line"><span class="comment">// 通过打开一个到实际文件的连接来创建一个FileInputStream，该文件通过文件系统中的路径name指定</span></span><br><span class="line">FileInputStream(String name)</span><br></pre></td></tr></table></div></figure><p>FileOutputStream：字节文件输出流是用于将数据写入到File，从程序中写入到其他位置。</p><p>构造方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个向指定File对象表示的文件中写入数据的文件输出流</span></span><br><span class="line">FileOutputStream(File file)</span><br><span class="line"><span class="comment">// 创建一个向指定File对象表示的文件中写入数据的文件输出流</span></span><br><span class="line">FileOutputStream(File file, <span class="keyword">boolean</span> append)</span><br><span class="line"><span class="comment">// 创建一个向具有指定名称的文件中写入数据的输出文件流</span></span><br><span class="line">FileOutputStream(String name)</span><br><span class="line"><span class="comment">// 创建一个向具有指定name的文件中写入数据的输出文件流</span></span><br><span class="line">FileOutputStream(String name, <span class="keyword">boolean</span> append)</span><br></pre></td></tr></table></div></figure><h3 id="字节缓冲流高效流"><span class="heading-link">字节缓冲流（高效流）</span></h3><p>BufferedInputStream：字节缓冲输入流，提高了读取效率。</p><p>构造方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个 BufferedInputStream并保存其参数，即输入流in，以便将来使用。</span></span><br><span class="line">BufferedInputStream(InputStream in)</span><br><span class="line"><span class="comment">// 创建具有指定缓冲区大小的 BufferedInputStream并保存其参数，即输入流in以便将来使用</span></span><br><span class="line">BufferedInputStream(InputStream in, <span class="keyword">int</span> size)</span><br></pre></td></tr></table></div></figure><p>BufferedOutputStream：字节缓冲输出流，提高了写出效率。</p><p>构造方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个新的缓冲输出流，以将数据写入指定的底层输出流</span></span><br><span class="line">BufferedOutputStream(OutputStream out)</span><br><span class="line"><span class="comment">// 创建一个新的缓冲输出流，以将具有指定缓冲区大小的数据写入指定的底层输出流</span></span><br><span class="line">BufferedOutputStream(OutputStream out, <span class="keyword">int</span> size)</span><br></pre></td></tr></table></div></figure><p>常用方法：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将指定 byte 数组中从偏移量 off 开始的 len 个字节写入此缓冲的输出流</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] b, <span class="keyword">int</span> off, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 将指定的字节写入此缓冲的输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"><span class="comment">// 刷新此缓冲的输出流</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span></span></span><br></pre></td></tr></table></div></figure><h3 id="字符流"><span class="heading-link">字符流</span></h3><p>1、Reader，字符输入流类都是Reader的子类，Reader类是一个抽象类，方法与InputStream类类似。<br>方法：</p><div class="table-container"><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">int read()</td><td style="text-align:center">读取并返回一个读取的字节，如果已经到达文件末尾，返回-1</td></tr><tr><td style="text-align:center">int read(char[] b)</td><td style="text-align:center">批量读取，读取最大b.length个字符到b数组，如果已经到达文件末尾，返回-1</td></tr><tr><td style="text-align:center">int read(char[] b,int off,int len)</td><td style="text-align:center">批量读取，读取最大len个字符到b数组，偏移量为off，如果已经到达文件末尾，返回-1</td></tr><tr><td style="text-align:center">int skip(int n)</td><td style="text-align:center">跳过并丢弃n个字节，返回实际跳过的字节数</td></tr><tr><td style="text-align:center">close()</td><td style="text-align:center">关闭流</td></tr></tbody></table></div><p>读取文件内容示例：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"D:\\java.txt"</span>);</span><br><span class="line">reader(file);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取文件内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reader</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">Reader read = <span class="keyword">null</span>;  <span class="comment">//声明Reader对象</span></span><br><span class="line"><span class="keyword">char</span>[] c = <span class="keyword">new</span> <span class="keyword">char</span>[(<span class="keyword">int</span>)file.length()];   <span class="comment">//根据文件大小定义数组</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">read = <span class="keyword">new</span> FileReader(file); <span class="comment">//使用FileReader实例化Reader</span></span><br><span class="line">read.read(c);        <span class="comment">//读取内容到数组</span></span><br><span class="line">read.close();</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"读取失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>2、Writer，Writer类和OutputStream类，在功能上是一致的，但两者前者写入的是字符，后者写入的是字节，Writer本身也是一个抽象类。<br>方法：</p><div class="table-container"><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">append(char c)</td><td style="text-align:center">将指定的字符c添加到输出流中</td></tr><tr><td style="text-align:center">write(int c)</td><td style="text-align:center">向输出流写入一个字节</td></tr><tr><td style="text-align:center">write(char[]) x，int off,int len）</td><td style="text-align:center">将字符数组内的数据写到输出流x中,off为偏移量，len为写入的长度</td></tr><tr><td style="text-align:center">write(String str)</td><td style="text-align:center">向输出流写入一个字符串</td></tr><tr><td style="text-align:center">write(String str, int off, int len）</td><td style="text-align:center">向输出流写入一个字符串，off为偏移量，len为写入的长度</td></tr><tr><td style="text-align:center">flush()</td><td style="text-align:center">将数据刷进磁盘,刷新内核缓冲区</td></tr><tr><td style="text-align:center">close()</td><td style="text-align:center">关闭流</td></tr></tbody></table></div><p>向文件写入内容示例：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向文件写入内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writer</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">String str = <span class="string">"java"</span>;</span><br><span class="line"><span class="keyword">char</span>[] c = str.toCharArray();  <span class="comment">//将字符串转换为char数组</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Writer writer = <span class="keyword">new</span> FileWriter(file);   <span class="comment">//实例化对象</span></span><br><span class="line">writer.write(c);    <span class="comment">//写入数据</span></span><br><span class="line">writer.close();</span><br><span class="line">System.out.println(<span class="string">"写入成功"</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException e) &#123;</span><br><span class="line">System.out.println(<span class="string">"写入失败"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java对数据的操作是通过流的方式，IO流用来处理设备之间的数据传输，上传文件和下载文件，Java用于操作流的对象都在IO包中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://blog.coor.top/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="io" scheme="https://blog.coor.top/tags/io/"/>
    
      <category term="文件" scheme="https://blog.coor.top/tags/%E6%96%87%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>集合类</title>
    <link href="https://blog.coor.top/80532/"/>
    <id>https://blog.coor.top/80532/</id>
    <published>2019-10-30T02:31:26.000Z</published>
    <updated>2020-02-04T10:17:17.828Z</updated>
    
    <content type="html"><![CDATA[<p>早在 Java 2 中之前，Java 就提供了特设类。比如：Dictionary, Vector, Stack, 和 Properties 这些类用来存储和操作对象组。<br>虽然这些类都非常有用，但是它们缺少一个核心的，统一的主题。由于这个原因，使用 Vector 类的方式和使用 Properties 类的方式有着很大不同。</p><a id="more"></a><h3 id="集合与数组的区别"><span class="heading-link">集合与数组的区别</span></h3><blockquote><p>数组：可以存储基本数据类型</p><p>数组是用来存放对象的一种容器，但是数组的长度固定，不适合在对象数量未知的情况下使用。</p></blockquote><blockquote><p>集合：只能存储对象，对象类型可以不一样</p><p>集合的长度可变，可在多数情况下使用。</p></blockquote><h3 id="collection接口"><span class="heading-link">Collection接口</span></h3><p>Collection接口是集合类的根接口，Java中没有提供这个接口的直接的实现类。但是却让其被继承产生了两个接口Set和List。</p><h3 id="map集合"><span class="heading-link">Map集合</span></h3><p>Map集合是Java.util包中的另一个接口，它和Collection接口没有关系，是相互独立的，但是都属于集合类的一部分。Map存放数据为键值对。Map不能包含重复的key，但是可以包含相同的value。</p><h3 id="几种集合简介"><span class="heading-link">几种集合简介</span></h3><h4 id="list有序-可重复"><span class="heading-link">List（有序、可重复）</span></h4><blockquote><p>List里存放的对象是有序的，同时也是可以重复的，List关注的是索引，拥有一系列和索引相关的方法，查询速度快。因为往list集合里插入或删除数据时，会伴随着后面数据的移动，所有插入删除数据速度慢。</p></blockquote><blockquote><p>List分为ArrayList，Vector，linkedlist。vector增长一倍线程安全，ArrayList增长一半线程不安全。<br>ArrayList和LinkedList在用法上没有区别，但是在功能上还是有区别的。<br>Linkedlist底层是数据链表结构，查的时候很慢，但是增删的时候很快，线程也不安全。LinkedList经常用在增删操作较多而查询操作很少的情况下，ArrayList则相反。</p></blockquote><h4 id="set无序-不能重复"><span class="heading-link">Set（无序、不能重复）</span></h4><p>Set里存放的对象是无序，不能重复的，集合中的对象不按特定的方式排序，只是简单地把对象加入集合中。</p><p>Set分为hashset，treeset。hashset无序的 ，treeset 是有序的。</p><h4 id="map键值对-键唯一-值不唯一"><span class="heading-link">Map（键值对、键唯一、值不唯一）</span></h4><p>Map集合中存储的是键值对，键不能重复，值可以重复。根据键得到值，对map集合遍历时先得到键的set集合，对set集合进行遍历，得到相应的值。</p><p>Map 以key value的形式存储数据。分为hashmap，hashtable。</p><h3 id="集合的遍历"><span class="heading-link">集合的遍历</span></h3><h4 id="在类集中提供了以下四种的常见输出方式"><span class="heading-link">在类集中提供了以下四种的常见输出方式：</span></h4><p>Iterator：迭代输出，是使用最多的输出方式。</p><p>ListIterator：是Iterator的子接口，专门用于输出List中的内容。</p><p>foreach输出：JDK1.5之后提供的新功能，可以输出数组或集合。</p><p>for循环</p><h4 id="代码示例如下"><span class="heading-link">代码示例如下：</span></h4><p>for的形式：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>（<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.size();i++）&#123;...&#125;</span><br></pre></td></tr></table></div></figure><p>foreach的形式：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>（<span class="keyword">int</span>　i：arr）&#123;...&#125;</span><br></pre></td></tr></table></div></figure><p>iterator的形式：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Iterator it = arr.iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123; object o =it.next(); ...&#125;</span><br></pre></td></tr></table></div></figure><h3 id="map集合的遍历"><span class="heading-link">map集合的遍历</span></h3><h4 id="keyset"><span class="heading-link">KeySet()</span></h4><p>将Map中所有的键存入到set集合中。因为set具备迭代器。所有可以迭代方式取出所有的键，再根据get方法。获取每一个键对应的值。 keySet():迭代后只能通过get()取key 。<br>取到的结果会乱序，是因为取得数据行主键的时候，使用了HashMap.keySet()方法，而这个方法返回的Set结果，里面的数据是乱序排放的。<br>典型用法如下：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line">map.put(<span class="string">"key1"</span>,<span class="string">"lisi1"</span>);</span><br><span class="line">map.put(<span class="string">"key2"</span>,<span class="string">"lisi2"</span>);</span><br><span class="line">map.put(<span class="string">"key3"</span>,<span class="string">"lisi3"</span>);</span><br><span class="line">map.put(<span class="string">"key4"</span>,<span class="string">"lisi4"</span>);  </span><br><span class="line"><span class="comment">//先获取map集合的所有键的set集合，keyset（）</span></span><br><span class="line">Iterator it = map.keySet().iterator();</span><br><span class="line"> <span class="comment">//获取迭代器</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Object key = it.next();</span><br><span class="line">System.out.println(map.get(key));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><h4 id="entryset"><span class="heading-link">entrySet（）</span></h4><p>Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet() //返回此映射中包含的映射关系的 Set 视图。（一个关系就是一个键-值对），就是把(key-value)作为一个整体一对一对地存放到Set集合当中的。<br>Map.Entry表示映射关系。entrySet()：迭代后可以e.getKey()，e.getValue()两种方法来取key和value。返回的是Entry接口。<br>典型用法如下：</p><figure class="highlight java"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line">map.put(<span class="string">"key1"</span>,<span class="string">"lisi1"</span>);</span><br><span class="line">map.put(<span class="string">"key2"</span>,<span class="string">"lisi2"</span>);</span><br><span class="line">map.put(<span class="string">"key3"</span>,<span class="string">"lisi3"</span>);</span><br><span class="line">map.put(<span class="string">"key4"</span>,<span class="string">"lisi4"</span>);</span><br><span class="line"><span class="comment">//将map集合中的映射关系取出，存入到set集合</span></span><br><span class="line">Iterator it = map.entrySet().iterator();</span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Entry e =(Entry) it.next();</span><br><span class="line">System.out.println(<span class="string">"键"</span>+e.getKey () + <span class="string">"的值为"</span> + e.getValue());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p>推荐使用第二种方式，即entrySet()方法，效率较高。<br>对于keySet其实是遍历了2次，一次是转为iterator，一次就是从HashMap中取出key所对于的value。<br>而entryset只是遍历了第一次，它把key和value都放到了entry中，所以快了。<br>两种遍历的遍历时间相差还是很明显的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;早在 Java 2 中之前，Java 就提供了特设类。比如：Dictionary, Vector, Stack, 和 Properties 这些类用来存储和操作对象组。&lt;br&gt;虽然这些类都非常有用，但是它们缺少一个核心的，统一的主题。由于这个原因，使用 Vector 类的方式和使用 Properties 类的方式有着很大不同。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://blog.coor.top/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="集合" scheme="https://blog.coor.top/tags/%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>ssm框架</title>
    <link href="https://blog.coor.top/294405/"/>
    <id>https://blog.coor.top/294405/</id>
    <published>2019-10-17T05:36:17.000Z</published>
    <updated>2020-02-04T10:17:39.437Z</updated>
    
    <content type="html"><![CDATA[<p>SSM框架，即Spring + Spring MVC + MyBatis的缩写，这个是继SSH之后，目前比较主流的Java EE企业级框架，适用于搭建各种大型的企业级应用系统。</p><a id="more"></a><h3 id="准备工作"><span class="heading-link">准备工作</span></h3><ol><li>数据库</li><li>IDE(集成开发环境),这里我用的是IntelliJ IDEA</li></ol><h3 id="步骤"><span class="heading-link">步骤</span></h3><h4 id="创建maven项目并添加所需要的依赖"><span class="heading-link">创建maven项目并添加所需要的依赖</span></h4><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 初始化spring版本 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>5.0.5.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-instrument<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jcl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-messaging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webflux<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-oxm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mysql --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- servlet-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- c3p0 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Log4j --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mybatis-spring --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- jstl --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet/jstl --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- ognl --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/ognl/ognl --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ognl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- commons-io --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- commons-fileupload --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- commons-pool --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-pool/commons-pool --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- commons-logging --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-logging/commons-logging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- aspectjweaver --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- javassist --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.javassist/javassist --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.22.0-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- standard --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/taglibs/standard --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- aopalliance --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/aopalliance/aopalliance --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mchange-commons-java --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mchange/mchange-commons-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mchange-commons-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- cglib --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/cglib/cglib --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- ant --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.ant/ant --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- ant-launcher --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.ant<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ant-launcher<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- asm --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.ow2.asm/asm --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.ow2.asm<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--gson--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jsoup--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.jsoup/jsoup --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.11.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h4 id="配置webxml文件"><span class="heading-link">配置web.xml文件</span></h4><h5 id="配置sping"><span class="heading-link">配置sping</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--spring--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/applicationContext*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="配置post乱码处理"><span class="heading-link">配置post乱码处理</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--post乱码处理--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>charsetEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceRequestEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>charsetEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="配置监听器"><span class="heading-link">配置监听器</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--监听器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="配置前端控制器"><span class="heading-link">配置前端控制器</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--前端控制器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springmvc/springmvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;url-pattern&gt;*.action&lt;/url-pattern&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h4 id="配置spingmvcxml"><span class="heading-link">配置spingmvc.xml</span></h4><h5 id="扫描组件"><span class="heading-link">扫描组件</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">""</span>/&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="注解映射器和注解适配器"><span class="heading-link">注解映射器和注解适配器</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="开启aop注解支持"><span class="heading-link">开启AOP注解支持</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="视图解析器"><span class="heading-link">视图解析器</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"view/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="文件上传解析器"><span class="heading-link">文件上传解析器</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 上传文件的大小设置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"1073741824"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h4 id="配置spingxml"><span class="heading-link">配置sping.xml</span></h4><h5 id="数据源"><span class="heading-link">数据源</span></h5><ol><li>db.properties</li></ol><figure class="highlight properties"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">jdbc.driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="meta">jdbc.url</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="meta">jdbc.username</span>=<span class="string">username</span></span><br><span class="line"><span class="meta">jdbc.password</span>=<span class="string">password</span></span><br></pre></td></tr></table></div></figure><ol start="2"><li>数据源xml</li></ol><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:properties/db.properties"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="sessionfactory"><span class="heading-link">sessionFactory</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapper/*Mapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="扫描mapper"><span class="heading-link">扫描mapper</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sessionFactory"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"top.ccoos.petsmall.mapper"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="事务管理"><span class="heading-link">事务管理</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">p:dataSource-ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="通知"><span class="heading-link">通知</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txadvice"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"save*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"delete*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"update*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"insert*"</span> <span class="attr">propagation</span>=<span class="string">"REQUIRED"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"select*"</span> <span class="attr">propagation</span>=<span class="string">"SUPPORTS"</span> <span class="attr">read-only</span>=<span class="string">"true"</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:method</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h5 id="aop"><span class="heading-link">aop</span></h5><figure class="highlight xml"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"txadvice"</span> <span class="attr">pointcut</span>=<span class="string">"execution(* service.impl.*.*(..))"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h3 id="项目结构"><span class="heading-link">项目结构</span></h3><div id="directoryStructure"><ul><li>src<ul><li>main<ul><li>java<ul><li>com.demo<ul><li>controller</li><li>mapper</li><li>pojo</li><li>service<ul><li>impl</li></ul></li><li>util</li></ul></li></ul></li><li>resources<ul><li>mapper</li><li>properties</li><li>spring</li><li>springmvc</li><li>impl</li></ul></li><li>test</li><li>webapp</li></ul></li></ul></li></ul></div><style>#directoryStructure li{list-style-type:none}</style>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSM框架，即Spring + Spring MVC + MyBatis的缩写，这个是继SSH之后，目前比较主流的Java EE企业级框架，适用于搭建各种大型的企业级应用系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://blog.coor.top/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="框架" scheme="https://blog.coor.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>面向对象概念</title>
    <link href="https://blog.coor.top/311624/"/>
    <id>https://blog.coor.top/311624/</id>
    <published>2019-10-09T06:36:58.000Z</published>
    <updated>2020-02-04T10:17:32.377Z</updated>
    
    <content type="html"><![CDATA[<p>面向对象是一种编程思想，它隐藏了代码具体实现的细节，把属性和方法封装在对象中。把拥有相同属性和方法的对象抽象为一个模型，即类。</p><a id="more"></a><h3 id="面向对象的特性"><span class="heading-link">面向对象的特性</span></h3><p>面向对象的三大特性是：封装 继承 多态</p><h3 id="什么是封装"><span class="heading-link">什么是封装</span></h3><p>将对象不需要让外界访问的属性和方法私有化，只提供符合我们意愿公有方法来访问，实现了代码的模块化保证了数据的安全性和稳定性。</p><h3 id="什么是继承"><span class="heading-link">什么是继承</span></h3><p>在多个不同的类中抽取出共性的属性和方法，对这些共性的内容进行封装成一个新的类即父类，让之前的类来继承这个类，那些共性的内容在子类中就不必重复定义，这样就提高了代码的复用性。</p><h3 id="什么是多态"><span class="heading-link">什么是多态</span></h3><p>同一事物表现出的多种形态，在代码中表现为不同类的对象发出相同的消息会有不同的行为。多态大大的提高了代码的可扩展性。</p><h4 id="多态的3个必要条件"><span class="heading-link">多态的3个必要条件：</span></h4><ol><li>要有继承</li><li>要有方法的重写</li><li>父类引用指向子类对象</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;面向对象是一种编程思想，它隐藏了代码具体实现的细节，把属性和方法封装在对象中。把拥有相同属性和方法的对象抽象为一个模型，即类。&lt;/p&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://blog.coor.top/categories/java/"/>
    
    
      <category term="java" scheme="https://blog.coor.top/tags/java/"/>
    
      <category term="概念" scheme="https://blog.coor.top/tags/%E6%A6%82%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>三级联动</title>
    <link href="https://blog.coor.top/46231/"/>
    <id>https://blog.coor.top/46231/</id>
    <published>2019-10-09T03:32:02.000Z</published>
    <updated>2020-02-04T10:30:49.553Z</updated>
    
    <content type="html"><![CDATA[<p>下拉列表的三级联动是非常常见的功能，通常用在省市区或年月日，他简化了我们去填写数据的需求，我们来看看它到底是如何实现的。</p><a id="more"></a><h4 id="html代码"><span class="heading-link">HTML代码</span></h4><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">onchange</span>=<span class="string">"changeDate()"</span> <span class="attr">id</span>=<span class="string">"yearSel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1950</span>;i &lt;= <span class="number">2030</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">'&lt;option&gt;'</span>+i+<span class="string">'年&lt;/option&gt;'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">onchange</span>=<span class="string">"changeDate()"</span> <span class="attr">id</span>=<span class="string">"monthSel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">12</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">'&lt;option&gt;'</span>+i+<span class="string">'月&lt;/option&gt;'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"dateSel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= <span class="number">31</span>;i++)&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.write(<span class="string">'&lt;option&gt;'</span>+i+<span class="string">'日&lt;/option&gt;'</span>);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></div></figure><h4 id="js代码"><span class="heading-link">JS代码</span></h4><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">changeDate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> year = <span class="built_in">parseInt</span>(<span class="built_in">document</span>.getElementById(<span class="string">"yearSel"</span>).value);</span><br><span class="line"><span class="keyword">var</span> month = <span class="built_in">parseInt</span>(<span class="built_in">document</span>.getElementById(<span class="string">"monthSel"</span>).value);</span><br><span class="line"><span class="keyword">var</span> date = <span class="number">31</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(month)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="keyword">if</span>((year%<span class="number">4</span> == <span class="number">0</span>&amp;&amp;year%<span class="number">100</span> == <span class="number">0</span>) || year%<span class="number">400</span> ==<span class="number">0</span>)&#123;</span><br><span class="line">date = <span class="number">29</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">date = <span class="number">28</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">date = <span class="number">30</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dateSel = <span class="built_in">document</span>.getElementById(<span class="string">"dateSel"</span>);</span><br><span class="line"><span class="keyword">var</span> dateTemp = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt;= date;i++)&#123;</span><br><span class="line">dateTemp = dateTemp + <span class="string">"&lt;option&gt;"</span>+i+<span class="string">"日&lt;/option&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">dateSel.innerHTML = dateTemp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><h4 id="效果图"><span class="heading-link">效果图</span></h4><p><img src="/images/loading.svg" alt class="lazyload gif" data-src="/images/article/1/20191009111621.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;下拉列表的三级联动是非常常见的功能，通常用在省市区或年月日，他简化了我们去填写数据的需求，我们来看看它到底是如何实现的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://blog.coor.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="html" scheme="https://blog.coor.top/tags/html/"/>
    
  </entry>
  
</feed>
